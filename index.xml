<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>henyxia&#39;s website</title>
    <link>https://henyxia.github.io/</link>
    <description>Recent content on henyxia&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://henyxia.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Module presentation</title>
      <link>https://henyxia.github.io/scholar/gis4-2019/00-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/scholar/gis4-2019/00-intro/</guid>
      <description>Module presentation Most of this module is taken from my teacher&amp;rsquo;s website (in French).
Creating an Highly Available web application First, what is an highly available web application?
Creating a &amp;lsquo;just available&amp;rsquo; web application Let&amp;rsquo;s start with a simplier design.</description>
    </item>
    
    <item>
      <title>Reminders</title>
      <link>https://henyxia.github.io/scholar/gis4-2019/01-reminders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/scholar/gis4-2019/01-reminders/</guid>
      <description>System administration, network and virtualization introduction What is TCP/IP?  source: Wikipedia
 What is a DNS nameserver?  source: Wikipedia
 Some widely used ports  80 HTTP 443 HTTPS 53 DNS
 22 SSH
 123 NTP
 25 SMTP
  What is Apache 2? |||v
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;My awesome website&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; Awesome! It works! &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  |||</description>
    </item>
    
    <item>
      <title>Network commands</title>
      <link>https://henyxia.github.io/scholar/gis4-2019/02-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/scholar/gis4-2019/02-network/</guid>
      <description>Let&amp;rsquo;s do some network! YAY! Network cards and MACs List interfaces root@my-server:~# ip link show 1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 2: eno1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether 0c:c4:7b:84:5f:2e brd ff:ff:ff:ff:ff:ff 3: eno2: &amp;lt;BROADCAST,MULTICAST&amp;gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether 0c:c4:7b:84:5f:3e brd ff:ff:ff:ff:ff:ff  Start an interface ip link set eno1 up  Change a MAC address ip link set eno1 address 00:11:22:33:44:55  Network cards and IPs List IPs root@my-server:~# ip address show 1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.</description>
    </item>
    
    <item>
      <title>VLAN definition</title>
      <link>https://henyxia.github.io/scholar/gis4-2019/03-vlan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/scholar/gis4-2019/03-vlan/</guid>
      <description> What is a VLAN? |||v
Why VLAN?  Local Area Network (LAN) security limitations Inefficient cost with scale  Virtual Local Area Network  Defined by two RFCs: IEEE 802.1q and IEEE 802.3ac Allow seperated LAN inside the same media All communication between VLANs go through a router  |||
 Source: Wikipedia
 </description>
    </item>
    
    <item>
      <title>Cisco presentation</title>
      <link>https://henyxia.github.io/scholar/gis4-2019/04-cisco/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/scholar/gis4-2019/04-cisco/</guid>
      <description>Now let&amp;rsquo;s do this on real equipments! Network equipments Definition  Like a desktop computer, but with signigicant differences CPUs with lower capacity Some dedicated chips to handle data flows Specific operating systems (Cisco IOS) No screens, no USB but a lot of ports Configurable via serial or SSH  Some basics With an example:
my-server$ ssh admin@router Password: router&amp;gt;enable Password: router#configure terminal Enter configuration commands, one per line. End with CNTL/Z.</description>
    </item>
    
    <item>
      <title>Tutorials</title>
      <link>https://henyxia.github.io/scholar/gis4-2019/10-tutorials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/scholar/gis4-2019/10-tutorials/</guid>
      <description>Tutorials Introduction Team organization  Everyone will have an assigned team Every team will have an unique ID  Tutorials organization  There will be multiple tutorials Every completed tutorial will be rewarded with points The point quantity will be linked to the difficulty of the tutorial Tutorial completion can only be validated by teachers  Final exam notation  The final exam will be a written test It will contain everything seen during course and tutorials It will account for 50% of your final score  Final score Your final score will be composed of:</description>
    </item>
    
    <item>
      <title>IPMI basic commands</title>
      <link>https://henyxia.github.io/notes/ipmi/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/notes/ipmi/basics/</guid>
      <description>For all the following examples, the selected channel is 1. This may change depending of your system.
Print LAN configuration ipmitool lan print
Set static IP ipmitool lan set 1 ipsrc static ipmitool lan set 1 ipaddr 192.168.1.12 ipmitool lan set 1 netmask 255.255.255.0 ipmitool lan set 1 defgw ipaddr 192.168.1.1  Set dynamic IP ipmitool lan set 1 ipsrc DHCP
Set VLAN ipmitool lan set 1 vlan id 12</description>
    </item>
    
    <item>
      <title>Create a Ceph OSD</title>
      <link>https://henyxia.github.io/notes/ceph/create-osd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/notes/ceph/create-osd/</guid>
      <description>There are currently two backend storage available in Ceph (since Luminous): FileStore and Bluestore. According to ceph post write performance is almost two times faster on some use cases. Therefore, Bluestore seems to be the new recommended backend for all new installations.
1 - On the new OSD We absolutely need to check that this new OSD have proper access to the ceph cluster. Run ceph -s and it must return the cluster health status.</description>
    </item>
    
    <item>
      <title>Remove a Ceph OSD</title>
      <link>https://henyxia.github.io/notes/ceph/remove-osd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/notes/ceph/remove-osd/</guid>
      <description>Preflight checklist  Connect on the OSD server and check ceph status ceph -s Removing an OSD is NOT recommended if the health is not HEALTH_OK Set the OSD_ID with export OSD_ID=X  Kick out the OSD  Remove the OSD with ceph osd out $OSD_ID Check the reweight (should be 0) with ceph osd tree  Shut off the OSD  Stop the OSD systemctl stop ceph-osd@${OSD_ID}.service Remove the associated service systemctl disable ceph-osd@${OSD_ID}.</description>
    </item>
    
    <item>
      <title>Enable IPMI kernel modules</title>
      <link>https://henyxia.github.io/notes/ipmi/kernel-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/notes/ipmi/kernel-module/</guid>
      <description>Once the ipmitool package is installed, it may still be unusable because of missing kernel modules. In order to load them, run:
modprobe ipmi_devintf modprobe ipmi_si  Source: serverfault</description>
    </item>
    
    <item>
      <title>Managing soft RAID</title>
      <link>https://henyxia.github.io/notes/raid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/notes/raid/</guid>
      <description> Create array mdadm --create /dev/mdX --level=X --raid-devices=X /dev/sdX /dev/sdY  Delete array mdadm --stop /dev/mdX mdadm --zero-superblock /dev/sdX mdadm --zero-superblock /dev/sdY  Add disk to array mdadm /dev/mdX --add /dev/sdX  Set disk as faulty mdadm /dev/mdX --fail /dev/sdX  Remove disk in array mdadm /dev/mdX --remove /dev/sdX  Change disk quantity in array mdadm --grow /dev/mdX --raid-devices=X  Switch to RW mdadm --readwrite /dev/mdX  Show details of array mdadm --detail /dev/md0  Show arrays status cat /proc/mdstat  </description>
    </item>
    
    <item>
      <title>Tuning OSD</title>
      <link>https://henyxia.github.io/notes/ceph/tuning-osd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henyxia.github.io/notes/ceph/tuning-osd/</guid>
      <description>My OSD are getting OOM killed Sometimes, Ceph OSD use way more memory than expected. Most of the time, the thumb rule to apply is 1To of storage being equal to 1Go of memory. In some cases, like recovery or scrubbing, the rule does not work, resulting in a OOM kill in a memory restrained environment.
When using bluestore, it is possible to reduce the memory used by OSD by tuning some particular settings through the admin socket of the OSD.</description>
    </item>
    
  </channel>
</rss>